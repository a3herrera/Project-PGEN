--DEBITOS
CREATE OR REPLACE TRIGGER CHK_MOVIMIENTOS_DEBITOS  
  BEFORE INSERT ON DEBITOS
 REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
  
  DECLARE
  PRAGMA AUTONOMOUS_TRANSACTION;
  V_SALDO_ACTUAL        NUMBER(18,2);
  CONTEO_CUENTA         NUMBER(4);
  BEGIN
      BEGIN
        SELECT COUNT(*) INTO CONTEO_CUENTA FROM CUENTAS WHERE ID_CUENTA = :NEW.CUENTA_NO;
        IF CONTEO_CUENTA = 0 THEN
          :NEW.MENSAJE := 'No_Cuenta no valido';
          :NEW.ESTADO := 1;
          
        END IF;  
    
        SELECT COUNT(*) INTO CONTEO_CUENTA FROM CUENTAS WHERE ID_CUENTA = :NEW.CUENTA_NO AND ESTADO =1;

        IF CONTEO_CUENTA = 0 THEN
          :NEW.MENSAJE := 'Cuenta: Estado no valido';
          :NEW.ESTADO := 0;
        END IF;
        
        IF CONTEO_CUENTA > 0 THEN
          IF :NEW.MONTO <= 0 THEN
            :NEW.MENSAJE := 'MONTO NO ES CORRECTO';    
            :NEW.ESTADO := 1;
          END IF;
          IF :NEW.MONTO >0 THEN
              SELECT SALDO INTO V_SALDO_ACTUAL FROM CUENTAS WHERE ID_CUENTA = :NEW.CUENTA_NO;
              IF V_SALDO_ACTUAL < :NEW.MONTO THEN
                :NEW.MENSAJE := 'SALDO INSUFICIENTE';
                :NEW.ESTADO := 1;  
              END IF;
              
              IF (V_SALDO_ACTUAL >= :NEW.MONTO ) THEN
                :NEW.MENSAJE := 'PROCESADO CON EXITO';
                :NEW.ESTADO := 1;
                UPDATE CUENTAS SET SALDO = (SALDO - :NEW.MONTO) WHERE ID_CUENTA = :NEW.CUENTA_NO;
                commit;
              END IF;
          END IF;
        END IF;
      END;
  END;
  
  
  
--CREDITOS
  
CREATE OR REPLACE TRIGGER CHK_MOVIMIENTOS_CREDITOS 
  BEFORE INSERT ON CREDITOS
REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
  
  DECLARE
  PRAGMA AUTONOMOUS_TRANSACTION;
  V_SALDO_ACTUAL        NUMBER(18,2);
  CONTEO_CUENTA         NUMBER(4);
  BEGIN
      BEGIN
        SELECT COUNT(*) INTO CONTEO_CUENTA FROM CUENTAS WHERE ID_CUENTA = :NEW.CUENTA_NO;
        IF CONTEO_CUENTA = 0 THEN
          :NEW.MENSAJE := 'Cuenta: Id incorrecto';
          :NEW.ESTADO := 0;
        END IF;

         SELECT COUNT(*) INTO CONTEO_CUENTA FROM CUENTAS WHERE ID_CUENTA = :NEW.CUENTA_NO AND ESTADO =1;

        IF CONTEO_CUENTA = 0 THEN
          :NEW.MENSAJE := 'Cuenta: Estado no valido';
          :NEW.ESTADO := 0;
        END IF;


        IF CONTEO_CUENTA > 0 THEN
          IF :NEW.MONTO <= 0 THEN
            :NEW.MENSAJE := 'MONTO NO ES CORRECTO';    
            :NEW.ESTADO := 0;
          END IF;
           IF :NEW.MONTO >0 THEN
            :NEW.MENSAJE := 'PROCESADO CON EXITO';
            :NEW.ESTADO := 1;
            UPDATE CUENTAS SET SALDO = SALDO + :NEW.MONTO WHERE ID_CUENTA = :NEW.CUENTA_NO;
          END IF;
        END IF;
      END;
      COMMIT;
  END;
  
-- INGRESO DE NUEVAS COMPRAS
create or replace TRIGGER COMPRA_NUEVA
	AFTER INSERT ON COMPRAS_PROVEEDORES
	REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW
	DECLARE
		V_ESTADO_PROVEEDOR VARCHAR2(255);
		CONTEO_CUENTA         NUMBER(4);
	BEGIN
		IF :NEW.ESTADO = 'Activa' THEN
			IF :NEW.MONTO<0 THEN
				INSERT INTO COMPRAS_PRV_COMENTARIOS(ID_COMENTARIO, ID_COMPRA, COMENTARIO) VALUES (SEQ_COMPRA_COMENT.NEXTVAL, :NEW.ID_COMPRA, 'Compra Rechazada - Monto invalido');
			ELSE
				SELECT COUNT(*) INTO CONTEO_CUENTA FROM PROVEEDORES WHERE ID_PROVEEDOR = :NEW.ID_PROVEEDOR;
				IF (CONTEO_CUENTA >0) THEN
					SELECT ESTADO INTO V_ESTADO_PROVEEDOR FROM PROVEEDORES WHERE ID_PROVEEDOR = :NEW.ID_PROVEEDOR;
					IF	V_ESTADO_PROVEEDOR = 'Activo' THEN
						INSERT INTO COMPRAS_PRV_COMENTARIOS(ID_COMENTARIO, ID_COMPRA, COMENTARIO) VALUES (SEQ_COMPRA_COMENT.NEXTVAL, :NEW.ID_COMPRA, 'Compra Aceptada');
						UPDATE PROVEEDORES SET MONTO = (MONTO + :NEW.MONTO) WHERE ID_PROVEEDOR = :NEW.ID_PROVEEDOR;
					ELSE
						INSERT INTO COMPRAS_PRV_COMENTARIOS(ID_COMENTARIO, ID_COMPRA, COMENTARIO) VALUES (SEQ_COMPRA_COMENT.NEXTVAL, :NEW.ID_COMPRA, 'Compra Rechazada - Estado Proveedor no válido');
					END IF;
				ELSE
						INSERT INTO COMPRAS_PRV_COMENTARIOS(ID_COMENTARIO, ID_COMPRA, COMENTARIO) VALUES (SEQ_COMPRA_COMENT.NEXTVAL, :NEW.ID_COMPRA, 'Compra Rechazada - Proveedor no encontrado');
				END IF;
				
			END IF;
			
		END IF;
	END;
  